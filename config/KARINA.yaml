### base config ###
default: &FULL_FIELD
  loss: 'l2'
  lr: 1E-3
  scheduler: 'CosineAnnealingLR'
  num_data_workers: 4
  dt: 1 # how many timesteps ahead the model will predict
  n_history: 0 #how many previous timesteps to consider
  prediction_type: 'iterative'
  prediction_length: 41 #applicable only if prediction_type == 'iterative'
  n_initial_conditions: 5 #applicable only if prediction_type == 'iterative'
  ics_type: "default"
  save_raw_forecasts: !!bool True
  save_channel: !!bool False
  masked_acc: !!bool False
  maskpath: None
  perturb: !!bool False
  add_grid: !!bool False
  N_grid_channels: 0
  gridtype: 'sinusoidal' #options 'sinusoidal' or 'linear'
  roll: !!bool False
  max_epochs: 150
  batch_size: 16
  lag: 0
  nettype: 'karina'

  #options default, residual
  target: 'default' 
  in_channels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66]
  out_channels: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66]
  normalization: 'zscore' 
  train_data_path: #your train data path
  valid_data_path: #your validation data path
  exp_dir: #your path
  time_means_path:   #your time_means_path
  global_means_path: #your means_path
  global_stds_path: #your std_path

  orography: !!bool False
  orography_path: #your orography_path

  log_to_screen: !!bool True
  log_to_wandb: !!bool True
  save_checkpoint: !!bool True

  enable_nhwc: !!bool False
  optimizer_type: 'AdamW'
  crop_size_x: None
  crop_size_y: None

  add_noise: !!bool False
  noise_std: 0

# This file utilizes methods adapted from NVIDIA FourCastNet for data processing.
# Original FourCastNet code can be found at https://github.com/NVlabs/FourCastNet
# We thank the NVIDIA FourCastNet team for making their code available for use.
